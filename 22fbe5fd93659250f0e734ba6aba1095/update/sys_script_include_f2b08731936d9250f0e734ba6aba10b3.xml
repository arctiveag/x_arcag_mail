<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_arcag_mail.PingenFileAPI</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Access pingen endpoints for file handling easily</description>
        <name>PingenFileAPI</name>
        <script><![CDATA[/* global sn_ws, PingenAPI */
/* eslint no-undef: "error" */
class PingenFileAPI extends PingenAPI {
	/**
	 * Get details for file upload (GET /file-upload)
	 * (2024-10-30 / BPF)
	 *
	 * Callers:
	 *  - PostalMailSender::createLetter
	 *
	 * @return {Object} - An object containing the execution information of the method,
	 *                    {boolean} success - state of the execution (whether it was successful or not)
	 *                    {String} message - An system intenal message about the state of the execution
	 *                    {String} file_url - The file url for the file upload
	 * 					  {Object} response - Response meta information
	 * 					  {number} response.code - The HTTP Response Code
	 * 					  {String} response.body - The HTTP Response Body (unparsed)
	 *                    {null|Error} error - The catched exception in an error case
	 */
	getDetailsForFileUpload() {
		const result = {
			success: false,
			message: "",
			file_url: null,
			file_url_signature: null,

			// meta information
			error: null,
			response: {
				code: null,
				body: null,
			},
		};

		try {
			const fileUploadMessage = new sn_ws.RESTMessageV2("x_arcag_mail.Pingen", "file-upload");
			fileUploadMessage.setStringParameterNoEscape("pingen_host", this.configuration.pingen_host);
			const response = fileUploadMessage.execute();
			result.response.body = response.getBody();
			result.response.code = response.getStatusCode();
			const responseBody = JSON.parse(result.response.body);
			result.file_url = responseBody?.data?.attributes?.url;
			result.file_url_signature = responseBody?.data?.attributes?.url_signature;
			result.success = true;
		} catch (ex) {
			return this._handleException("file-upload", ex, result);
		}

		return result;
	}

	/**
	 * Upload a file to S3 storage bucket (PUT {S3-URL})
	 * (2024-10-30 / BPF)
	 *
	 * Callers:
	 *  - PostalMailSender::createLetter
	 * 
	 * @param {String} uploadURL - The S3 Upload URL received from ::getDetailsForFileUpload
	 * @param {String} attachmentSysID - The sys_id of the attachment that should be uploaded to the S3 URL
	 *
	 * @return {Object} - An object containing the execution information of the method,
	 *                    {boolean} success - state of the execution (whether it was successful or not)
	 *                    {String} message - An system intenal message about the state of the execution
	 * 					  {Object} response - Response meta information
	 * 					  {number} response.code - The HTTP Response Code
	 * 					  {String} response.body - The HTTP Response Body (unparsed)
	 *                    {null|Error} error - The catched exception in an error case
	 */
	sendFileToS3URL(uploadURL, attachmentSysID) {
		const result = {
			success: false,
			message: "",

			// meta information
			error: null,
			response: {
				code: null,
				body: null,
			},
		};
		try {
			const fileUploadS3Message = new sn_ws.RESTMessageV2("x_arcag_mail.Pingen", "file-upload-s3");
			fileUploadS3Message.setStringParameterNoEscape("pingen_s3_url", uploadURL);
			// fileUploadS3Message.setStringParameterNoEscape("binary_file_content", binaryFileContent);
			fileUploadS3Message.setRequestBodyFromAttachment(attachmentSysID);
			const response = fileUploadS3Message.execute();
			result.response.body = response.getBody();
			result.response.code = response.getStatusCode();
			result.success = true;
		} catch (ex) {
			return this._handleException("file-upload-s3", ex, result);
		}

		return result;
	}
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>bjoern.pfoster</sys_created_by>
        <sys_created_on>2024-10-30 14:46:13</sys_created_on>
        <sys_id>f2b08731936d9250f0e734ba6aba10b3</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>PingenFileAPI</sys_name>
        <sys_package display_value="Postal PDF" source="x_arcag_mail">22fbe5fd93659250f0e734ba6aba1095</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Postal PDF">22fbe5fd93659250f0e734ba6aba1095</sys_scope>
        <sys_update_name>sys_script_include_f2b08731936d9250f0e734ba6aba10b3</sys_update_name>
        <sys_updated_by>bjoern.pfoster</sys_updated_by>
        <sys_updated_on>2024-10-31 08:05:20</sys_updated_on>
    </sys_script_include>
</record_update>
